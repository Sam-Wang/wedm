// Included Files
#include "DSP28x_Project.h"
#include "definitions.h"
#include "CLAShared.h"

__interrupt void
Cla1Task1(void)
{

}

__interrupt void
Cla1Task2 (void)
{

}

__interrupt void
Cla1Task3 (void)
{

}

__interrupt void
Cla1Task4 (void)
{

}

__interrupt void
Cla1Task5 (void)
{

}

__interrupt void
Cla1Task6 (void)
{

}

__interrupt void
Cla1Task7 (void)
{
#if I_SENS1
    current1Sum -= (Uint32) current1Val[SampleCount];
    current1Val[SampleCount] = AdcResult.ADCRESULT0;
    current1Sum += current1Val[SampleCount];
    current1 = (float) (current1Sum / FILTER_LEN) * M1 + C1;
#endif

#if I_SENS2
    current2Sum -= (Uint32) current2Val[SampleCount];
    current2Val[SampleCount] = AdcResult.ADCRESULT1;
    current2Sum += current2Val[SampleCount];
    current2 = (float) (current2Sum / FILTER_LEN) * M2 + C2;
#endif

#if I_SENS3
    current3Sum -= (Uint32) current3Val[SampleCount];
    current3Val[SampleCount] = AdcResult.ADCRESULT2;
    current3Sum += current3Val[SampleCount];
    current3 = (float) (current3Sum / FILTER_LEN) * M3 + C3;
#endif

#if V_SENS1
    voltage1Sum -= (Uint32) voltage1Val[SampleCount];
    voltage1Val[SampleCount] = AdcResult.ADCRESULT3;
    voltage1Sum += voltage1Val[SampleCount];
    voltage1 = (float) (voltage1Sum / FILTER_LEN) * M4 + C4;
#endif

#if V_SENS2
    voltage2Sum -= (Uint32) voltage2Val[SampleCount];
    voltage2Val[SampleCount] = AdcResult.ADCRESULT4;
    voltage2Sum += voltage2Val[SampleCount];
    voltage2 = (float) (voltage2Sum / FILTER_LEN) * M5 + C5;
#endif

#if I_SENS1 || I_SENS2 || I_SENS3 || V_SENS1 || V_SENS2
    SampleCount = SampleCount<FILTER_LEN-1?SampleCount+1:0;
#endif

#if DIAGNOSTICS
    adcCount++;
#endif
}

__interrupt void
Cla1Task8 (void)
{
    int i;
    //#pragma MUST_ITERATE(FILTER_LEN, FILTER_LEN)
    #pragma UNROLL(FILTER_LEN)
    for(i = 0; i < FILTER_LEN; i++)
    {
        #if I_SENS1
            current1Val[i] = 0;
        #endif
        #if I_SENS2
            current2Val[i] = 0;
        #endif
        #if I_SENS3
            current3Val[i] = 0;
        #endif
        #if V_SENS1
            voltage1Val[i] = 0;
        #endif
        #if V_SENS2
            voltage2Val[i] = 0;
        #endif
    }

    #if I_SENS1
        current1Sum = 0;
    #endif
    #if I_SENS2
        current2Sum = 0;
    #endif
    #if I_SENS3
        current3Sum = 0;
    #endif
    #if V_SENS1
        voltage1Sum = 0;
    #endif
    #if V_SENS2
        voltage2Sum = 0;
    #endif

    #if I_SENS1 || I_SENS2 || I_SENS3 || V_SENS1 || V_SENS2
        SampleCount = 0;
    #endif

#if DIAGNOSTICS
    adcCount = 0;
    claTask8Count++;
#endif
}
